<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- 配置全站异常解析器 -->
    <bean id="allCustomExceptionResolver" class="cn.domarvel.exception.AllCustomExceptionResolver">
        <property name="defaultErrorPage" value="/WEB-INF/pages/error/convertToErrorJson.jsp"/>
    </bean>


    <!-- 使用 mvc:annotation-driven 代替上边注解映射器和注解适配器配置
        mvc:annotation-driven 默认加载很多的参数绑定方法，
        比如json转换解析器就默认加载了，如果使用 mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
        实际开发时使用 mvc:annotation-driven
    -->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!-- SpringMVC容器中只注册带有@controller注解的Bean -->
    <context:component-scan base-package="cn.domarvel" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
            </list>
        </property>
    </bean>

    <mvc:annotation-driven >
        <!-- 消息转换器 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!-- 开启 SpringSecurity 注解，注意：因为要扫描SpringMVC的注解，所以我要在这里配置打开SpringSecurity扫描 -->
    <security:global-method-security
            pre-post-annotations="enabled"
            jsr250-annotations="enabled"
            secured-annotations="enabled"
    />


    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 最大文件大小，单位字节 -->
        <property name="maxUploadSize" value="62914560"/><!-- 为 60 MB -->
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 启动对@AspectJ注解的支持 -->
    <!-- proxy-target-class等于true是强制使用cglib代理，proxy-target-class默认是false，如果你的类实现了接口 就走JDK代理，如果没有，走cglib代理  -->
    <!-- 注：对于单利模式建议使用cglib代理，虽然JDK动态代理比cglib代理速度快，但性能不如cglib -->
    <!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->
</beans>